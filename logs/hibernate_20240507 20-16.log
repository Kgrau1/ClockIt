[DEBUG] 2024-05-07 20-16-06.207 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-05-07 20-16-06.214 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2024-05-07 20-16-06.219 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-05-07 20-16-06.293 [http-nio-8080-exec-5] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2024-05-07 20-16-06.295 [http-nio-8080-exec-5] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2024-05-07 20-16-06.443 [http-nio-8080-exec-5] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2024-05-07 20-16-06.444 [http-nio-8080-exec-5] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2024-05-07 20-16-06.447 [http-nio-8080-exec-5] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-05-07 20-16-06.676 [http-nio-8080-exec-5] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2024-05-07 20-16-06.698 [http-nio-8080-exec-5] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2024-05-07 20-16-06.699 [http-nio-8080-exec-5] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2024-05-07 20-16-06.726 [http-nio-8080-exec-5] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2024-05-07 20-16-06.768 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7974a930
[DEBUG] 2024-05-07 20-16-06.768 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7974a930
[DEBUG] 2024-05-07 20-16-06.768 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7974a930
[DEBUG] 2024-05-07 20-16-06.769 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2aeef082
[DEBUG] 2024-05-07 20-16-06.769 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1b89a859
[DEBUG] 2024-05-07 20-16-06.770 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@63d26b19
[DEBUG] 2024-05-07 20-16-06.772 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@548fd0f0
[DEBUG] 2024-05-07 20-16-06.772 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@548fd0f0
[DEBUG] 2024-05-07 20-16-06.772 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@548fd0f0
[DEBUG] 2024-05-07 20-16-06.773 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@65f18b86
[DEBUG] 2024-05-07 20-16-06.773 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@65f18b86
[DEBUG] 2024-05-07 20-16-06.773 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65f18b86
[DEBUG] 2024-05-07 20-16-06.774 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@223e12ad
[DEBUG] 2024-05-07 20-16-06.774 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@223e12ad
[DEBUG] 2024-05-07 20-16-06.774 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@223e12ad
[DEBUG] 2024-05-07 20-16-06.775 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5754e662
[DEBUG] 2024-05-07 20-16-06.775 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5754e662
[DEBUG] 2024-05-07 20-16-06.776 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5754e662
[DEBUG] 2024-05-07 20-16-06.776 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@35f2bf65
[DEBUG] 2024-05-07 20-16-06.777 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@35f2bf65
[DEBUG] 2024-05-07 20-16-06.777 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@35f2bf65
[DEBUG] 2024-05-07 20-16-06.777 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@70bf43dd
[DEBUG] 2024-05-07 20-16-06.778 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@70bf43dd
[DEBUG] 2024-05-07 20-16-06.778 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@70bf43dd
[DEBUG] 2024-05-07 20-16-06.779 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@74e2cdf1
[DEBUG] 2024-05-07 20-16-06.779 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@74e2cdf1
[DEBUG] 2024-05-07 20-16-06.779 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@74e2cdf1
[DEBUG] 2024-05-07 20-16-06.780 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@18c102c8
[DEBUG] 2024-05-07 20-16-06.780 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@18c102c8
[DEBUG] 2024-05-07 20-16-06.781 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6302b547
[DEBUG] 2024-05-07 20-16-06.781 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6302b547
[DEBUG] 2024-05-07 20-16-06.782 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@11e174d9
[DEBUG] 2024-05-07 20-16-06.782 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@11e174d9
[DEBUG] 2024-05-07 20-16-06.782 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@11596def
[DEBUG] 2024-05-07 20-16-06.783 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@36a99d21
[DEBUG] 2024-05-07 20-16-06.784 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2295051a
[DEBUG] 2024-05-07 20-16-06.784 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2295051a
[DEBUG] 2024-05-07 20-16-06.784 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6b22cb7f
[DEBUG] 2024-05-07 20-16-06.785 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6b22cb7f
[DEBUG] 2024-05-07 20-16-06.789 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@23776890
[DEBUG] 2024-05-07 20-16-06.789 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@23776890
[DEBUG] 2024-05-07 20-16-06.790 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@c26034
[DEBUG] 2024-05-07 20-16-06.790 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@c26034
[DEBUG] 2024-05-07 20-16-06.791 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@706406ab
[DEBUG] 2024-05-07 20-16-06.792 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@706406ab
[DEBUG] 2024-05-07 20-16-06.793 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a4af5f0
[DEBUG] 2024-05-07 20-16-06.793 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a4af5f0
[DEBUG] 2024-05-07 20-16-06.794 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@482202c0
[DEBUG] 2024-05-07 20-16-06.794 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@482202c0
[DEBUG] 2024-05-07 20-16-06.795 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@50adc056
[DEBUG] 2024-05-07 20-16-06.795 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@50adc056
[DEBUG] 2024-05-07 20-16-06.796 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f12a189
[DEBUG] 2024-05-07 20-16-06.797 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f12a189
[DEBUG] 2024-05-07 20-16-06.798 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@361a0480
[DEBUG] 2024-05-07 20-16-06.798 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@361a0480
[DEBUG] 2024-05-07 20-16-06.799 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5c6b1974
[DEBUG] 2024-05-07 20-16-06.799 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5c6b1974
[DEBUG] 2024-05-07 20-16-06.800 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@734d704b
[DEBUG] 2024-05-07 20-16-06.800 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@734d704b
[DEBUG] 2024-05-07 20-16-06.800 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@734d704b
[DEBUG] 2024-05-07 20-16-06.801 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@66996fa9
[DEBUG] 2024-05-07 20-16-06.802 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5c65cbd8
[DEBUG] 2024-05-07 20-16-06.802 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5c65cbd8
[DEBUG] 2024-05-07 20-16-06.802 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5c65cbd8
[DEBUG] 2024-05-07 20-16-06.803 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6da52c5e
[DEBUG] 2024-05-07 20-16-06.804 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@ed81d8f
[DEBUG] 2024-05-07 20-16-06.804 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@ed81d8f
[DEBUG] 2024-05-07 20-16-06.805 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@42e5a476
[DEBUG] 2024-05-07 20-16-06.805 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@42e5a476
[DEBUG] 2024-05-07 20-16-06.806 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7a107c12
[DEBUG] 2024-05-07 20-16-06.806 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7a107c12
[DEBUG] 2024-05-07 20-16-06.807 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7bf2e2bc
[DEBUG] 2024-05-07 20-16-06.807 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf2e2bc
[DEBUG] 2024-05-07 20-16-06.808 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@d5d47bf
[DEBUG] 2024-05-07 20-16-06.808 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@d5d47bf
[DEBUG] 2024-05-07 20-16-06.808 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6cf99ca3
[DEBUG] 2024-05-07 20-16-06.810 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@a2e8058
[DEBUG] 2024-05-07 20-16-06.810 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@a2e8058
[DEBUG] 2024-05-07 20-16-06.810 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@a2e8058
[DEBUG] 2024-05-07 20-16-06.811 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@770b4ec7
[DEBUG] 2024-05-07 20-16-06.811 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@770b4ec7
[DEBUG] 2024-05-07 20-16-06.811 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@770b4ec7
[DEBUG] 2024-05-07 20-16-06.812 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@727a2966
[DEBUG] 2024-05-07 20-16-06.812 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@509c92f7
[DEBUG] 2024-05-07 20-16-06.813 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@47b14d02
[DEBUG] 2024-05-07 20-16-06.813 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@47b14d02
[DEBUG] 2024-05-07 20-16-06.813 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@47b14d02
[DEBUG] 2024-05-07 20-16-06.814 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5f457c5
[DEBUG] 2024-05-07 20-16-06.814 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5f457c5
[DEBUG] 2024-05-07 20-16-06.814 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5f457c5
[DEBUG] 2024-05-07 20-16-06.815 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3d62bc6c
[DEBUG] 2024-05-07 20-16-06.815 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@15010dc2
[DEBUG] 2024-05-07 20-16-06.817 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@64144360
[DEBUG] 2024-05-07 20-16-06.817 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@64144360
[DEBUG] 2024-05-07 20-16-06.817 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3b22c605
[DEBUG] 2024-05-07 20-16-06.819 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6ef02ad3
[DEBUG] 2024-05-07 20-16-06.819 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6ef02ad3
[DEBUG] 2024-05-07 20-16-06.820 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@15973dff
[DEBUG] 2024-05-07 20-16-06.820 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@15973dff
[DEBUG] 2024-05-07 20-16-06.821 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@39c1abc5
[DEBUG] 2024-05-07 20-16-06.821 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24af8d02
[DEBUG] 2024-05-07 20-16-06.823 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@40bd7567
[DEBUG] 2024-05-07 20-16-06.826 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1888670f
[DEBUG] 2024-05-07 20-16-06.826 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1888670f
[DEBUG] 2024-05-07 20-16-06.827 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b7b2dad
[DEBUG] 2024-05-07 20-16-06.827 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4dbbd095
[DEBUG] 2024-05-07 20-16-06.827 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7ab2107f
[DEBUG] 2024-05-07 20-16-06.827 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7eb3607c
[DEBUG] 2024-05-07 20-16-06.827 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c272c42
[DEBUG] 2024-05-07 20-16-06.827 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f8b642b
[DEBUG] 2024-05-07 20-16-06.827 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@550a04d
[DEBUG] 2024-05-07 20-16-06.827 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6085901b
[DEBUG] 2024-05-07 20-16-06.857 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-05-07 20-16-06.857 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-05-07 20-16-06.858 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-05-07 20-16-06.858 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-05-07 20-16-06.859 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-05-07 20-16-06.860 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-05-07 20-16-06.861 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-05-07 20-16-06.862 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-05-07 20-16-06.863 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2024-05-07 20-16-06.863 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-05-07 20-16-06.864 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-05-07 20-16-06.864 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2024-05-07 20-16-06.864 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-05-07 20-16-06.865 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2024-05-07 20-16-06.868 [http-nio-8080-exec-5] ConnectionProviderInitiator - HHH000022: c3p0 properties were encountered, but the c3p0 provider class was not found on the classpath; these properties are going to be ignored.
[WARN ] 2024-05-07 20-16-06.870 [http-nio-8080-exec-5] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2024-05-07 20-16-06.874 [http-nio-8080-exec-5] pooling - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://awseb-e-dpzejsp2a8-stack-awsebrdsdatabase-wz6ttdxqntx5.cfruplhcesjs.us-east-2.rds.amazonaws.com:3306/clockit]
[INFO ] 2024-05-07 20-16-06.875 [http-nio-8080-exec-5] pooling - HHH10001001: Connection properties: {password=RootPass., user=root}
[INFO ] 2024-05-07 20-16-06.875 [http-nio-8080-exec-5] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2024-05-07 20-16-06.878 [http-nio-8080-exec-5] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2024-05-07 20-16-06.878 [http-nio-8080-exec-5] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2024-05-07 20-16-07.846 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.35
      major : 8
      minor : 0
[DEBUG] 2024-05-07 20-16-07.846 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-05-07 20-16-07.846 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2024-05-07 20-16-07.876 [http-nio-8080-exec-5] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2024-05-07 20-16-07.896 [http-nio-8080-exec-5] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-05-07 20-16-07.973 [http-nio-8080-exec-5] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-05-07 20-16-08.056 [http-nio-8080-exec-5] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-05-07 20-16-08.062 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@467aa405] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6713ba1c]
[DEBUG] 2024-05-07 20-16-08.117 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: entity.User
[DEBUG] 2024-05-07 20-16-08.141 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2024-05-07 20-16-08.149 [http-nio-8080-exec-5] EntityBinder - Import with entity name User
[DEBUG] 2024-05-07 20-16-08.152 [http-nio-8080-exec-5] EntityBinder - Bind entity entity.User on table users
[DEBUG] 2024-05-07 20-16-08.177 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2024-05-07 20-16-08.181 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-05-07 20-16-08.183 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:id]
[DEBUG] 2024-05-07 20-16-08.186 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2024-05-07 20-16-08.188 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2024-05-07 20-16-08.192 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-05-07 20-16-08.195 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2024-05-07 20-16-08.196 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=attendance, insertable=true, updatable=true, unique=false}
[DEBUG] 2024-05-07 20-16-08.198 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2024-05-07 20-16-08.209 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2024-05-07 20-16-08.210 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=attendance_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2024-05-07 20-16-08.210 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='attendance_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2024-05-07 20-16-08.212 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2024-05-07 20-16-08.212 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2024-05-07 20-16-08.212 [http-nio-8080-exec-5] CollectionBinder - Collection role: entity.User.attendance
[DEBUG] 2024-05-07 20-16-08.215 [http-nio-8080-exec-5] PropertyBinder - Building property attendance
[DEBUG] 2024-05-07 20-16-08.215 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password_hash, insertable=true, updatable=true, unique=false}
[DEBUG] 2024-05-07 20-16-08.216 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property passwordHash with lazy=false
[DEBUG] 2024-05-07 20-16-08.216 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:passwordHash]
[DEBUG] 2024-05-07 20-16-08.216 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for passwordHash
[DEBUG] 2024-05-07 20-16-08.216 [http-nio-8080-exec-5] PropertyBinder - Building property passwordHash
[DEBUG] 2024-05-07 20-16-08.216 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2024-05-07 20-16-08.216 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2024-05-07 20-16-08.216 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.User:username]
[DEBUG] 2024-05-07 20-16-08.216 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2024-05-07 20-16-08.216 [http-nio-8080-exec-5] PropertyBinder - Building property username
[DEBUG] 2024-05-07 20-16-08.217 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: entity.Attendance
[DEBUG] 2024-05-07 20-16-08.217 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2024-05-07 20-16-08.217 [http-nio-8080-exec-5] EntityBinder - Import with entity name Attendance
[DEBUG] 2024-05-07 20-16-08.217 [http-nio-8080-exec-5] EntityBinder - Bind entity entity.Attendance on table attendance
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(attendance), mappingColumn=attendance_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Attendance:id]
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(attendance_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(attendance), mappingColumn=clock_in_time, insertable=true, updatable=true, unique=false}
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property clockInTime with lazy=false
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Attendance:clockInTime]
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for clockInTime
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] PropertyBinder - Building property clockInTime
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(attendance), mappingColumn=clock_out_time, insertable=true, updatable=true, unique=false}
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property clockOutTime with lazy=false
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Attendance:clockOutTime]
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for clockOutTime
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] PropertyBinder - Building property clockOutTime
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(attendance), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property clockedStatus with lazy=false
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Attendance:clockedStatus]
[DEBUG] 2024-05-07 20-16-08.221 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for clockedStatus
[DEBUG] 2024-05-07 20-16-08.222 [http-nio-8080-exec-5] PropertyBinder - Building property clockedStatus
[DEBUG] 2024-05-07 20-16-08.222 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(attendance), mappingColumn=date, insertable=true, updatable=true, unique=false}
[DEBUG] 2024-05-07 20-16-08.222 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property date with lazy=false
[DEBUG] 2024-05-07 20-16-08.222 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Attendance:date]
[DEBUG] 2024-05-07 20-16-08.222 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for date
[DEBUG] 2024-05-07 20-16-08.222 [http-nio-8080-exec-5] PropertyBinder - Building property date
[DEBUG] 2024-05-07 20-16-08.222 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2024-05-07 20-16-08.222 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(attendance), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2024-05-07 20-16-08.224 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2024-05-07 20-16-08.225 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2024-05-07 20-16-08.225 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for passwordHash
[DEBUG] 2024-05-07 20-16-08.225 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2024-05-07 20-16-08.225 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2024-05-07 20-16-08.225 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for clockInTime
[DEBUG] 2024-05-07 20-16-08.225 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for clockOutTime
[DEBUG] 2024-05-07 20-16-08.225 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for clockedStatus
[DEBUG] 2024-05-07 20-16-08.225 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for date
[DEBUG] 2024-05-07 20-16-08.229 [http-nio-8080-exec-5] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-05-07 20-16-08.229 [http-nio-8080-exec-5] PrimaryKey - Forcing column [attendance_id] to be non-null as it is part of the primary key for table [attendance]
[DEBUG] 2024-05-07 20-16-08.229 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: entity.User.attendance
[DEBUG] 2024-05-07 20-16-08.230 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: entity.User.attendance through a foreign key
[DEBUG] 2024-05-07 20-16-08.230 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: entity.User.attendance -> attendance
[DEBUG] 2024-05-07 20-16-08.231 [http-nio-8080-exec-5] TableBinder - Retrieving property entity.Attendance.user
[DEBUG] 2024-05-07 20-16-08.231 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user_id, one-to-many: entity.Attendance
[DEBUG] 2024-05-07 20-16-08.232 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: entity.User
[DEBUG] 2024-05-07 20-16-08.234 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: entity.User
[DEBUG] 2024-05-07 20-16-08.268 [http-nio-8080-exec-5] SessionFactoryImpl - Building session factory
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - SessionFactory name : null
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Statistics: disabled
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Default entity-mode: pojo
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Default batch fetch size: -1
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Default null ordering: NONE
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - multi-tenancy strategy : NONE
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - JTA Track by Thread: enabled
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Query language substitutions: {}
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Named query checking : enabled
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Second-level cache: disabled
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Second-level query cache: disabled
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Second-level query cache factory: null
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Second-level cache region prefix: null
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Structured second-level cache entries: disabled
[DEBUG] 2024-05-07 20-16-08.269 [http-nio-8080-exec-5] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2024-05-07 20-16-08.270 [http-nio-8080-exec-5] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2024-05-07 20-16-08.270 [http-nio-8080-exec-5] Settings - JDBC batch size: 15
[DEBUG] 2024-05-07 20-16-08.270 [http-nio-8080-exec-5] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2024-05-07 20-16-08.270 [http-nio-8080-exec-5] Settings - Scrollable result sets: enabled
[DEBUG] 2024-05-07 20-16-08.270 [http-nio-8080-exec-5] Settings - Wrap result sets: disabled
[DEBUG] 2024-05-07 20-16-08.270 [http-nio-8080-exec-5] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2024-05-07 20-16-08.270 [http-nio-8080-exec-5] Settings - JDBC result set fetch size: null
[DEBUG] 2024-05-07 20-16-08.270 [http-nio-8080-exec-5] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2024-05-07 20-16-08.270 [http-nio-8080-exec-5] Settings - Generate SQL with comments: disabled
[DEBUG] 2024-05-07 20-16-08.270 [http-nio-8080-exec-5] Settings - JPA compliance - query : 
[DEBUG] 2024-05-07 20-16-08.270 [http-nio-8080-exec-5] Settings - JPA compliance - closed-handling : 
[DEBUG] 2024-05-07 20-16-08.270 [http-nio-8080-exec-5] Settings - JPA compliance - lists : 
[DEBUG] 2024-05-07 20-16-08.270 [http-nio-8080-exec-5] Settings - JPA compliance - transactions : 
[INFO ] 2024-05-07 20-16-08.327 [http-nio-8080-exec-5] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2024-05-07 20-16-08.349 [http-nio-8080-exec-5] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-05-07 20-16-08.349 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, catalina.useNaming=true, org.apache.el.GET_CLASSLOADER_USE_PRIVILEGED=false, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.22+7\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2024-01-16, java.home=C:\Program Files\Java\jdk-11.0.22+7, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, com.sun.management.jmxremote.password.file=C:\Users\cheve\AppData\Local\JetBrains\IntelliJIdea2023.3\tomcat\e583dc0b-35df-491d-b4e3-c6be821192bb\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, hibernate.hbm2ddl.auto=update, user.script=, java.util.logging.config.file=C:\Users\cheve\AppData\Local\JetBrains\IntelliJIdea2023.3\tomcat\e583dc0b-35df-491d-b4e3-c6be821192bb\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.22+7, user.name=cheve, file.encoding=Cp1252, java.vendor.version=Temurin-11.0.22+7, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\Program Files\apache-tomcat-8.5.98\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, com.sun.management.jmxremote.port=1099, java.version=11.0.22, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher*.jar,ant*.jar,asm-*.jar,aspectj*.jar,bcel*.jar,biz.aQute.bnd*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-compress*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,org.hamcrest.core_*.jar,org.junit_*.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,unboundid-ldapsdk-*.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, java.library.path=C:\Program Files\Java\jdk-11.0.22+7\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Git\cmd;C:\Users\cheve\AppData\Local\Microsoft\WindowsApps;C:\Microsoft VS Code\bin;., java.vendor=Eclipse Adoptium, java.specification.maintenance.version=2, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=windows, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Program Files\apache-tomcat-8.5.98\bin\bootstrap.jar;C:\Program Files\apache-tomcat-8.5.98\bin\tomcat-juli.jar, java.vm.vendor=Eclipse Adoptium, user.variant=, user.timezone=America/Chicago, os.name=Windows 11, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\cheve, hibernate.c3p0.max_statements=50, user.language=en, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., server.loader=, com.sun.management.jmxremote.access.file=C:\Users\cheve\AppData\Local\JetBrains\IntelliJIdea2023.3\tomcat\e583dc0b-35df-491d-b4e3-c6be821192bb\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, common.loader="C:/Program Files/apache-tomcat-8.5.98/lib","C:/Program Files/apache-tomcat-8.5.98/lib/*.jar","C:\Program Files\apache-tomcat-8.5.98/lib","C:\Program Files\apache-tomcat-8.5.98/lib/*.jar", hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://awseb-e-dpzejsp2a8-stack-awsebrdsdatabase-wz6ttdxqntx5.cfruplhcesjs.us-east-2.rds.amazonaws.com:3306/clockit, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, catalina.home=C:\Program Files\apache-tomcat-8.5.98, user.dir=C:\Program Files\apache-tomcat-8.5.98\bin, os.arch=amd64, hibernate.connection.password=****, catalina.base=C:\Users\cheve\AppData\Local\JetBrains\IntelliJIdea2023.3\tomcat\e583dc0b-35df-491d-b4e3-c6be821192bb, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@62badc72, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.vm.info=mixed mode, java.vm.version=11.0.22+7, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, connection.url=jdbc:mysql://awseb-e-dpzejsp2a8-stack-awsebrdsdatabase-wz6ttdxqntx5.cfruplhcesjs.us-east-2.rds.amazonaws.com:3306/clockit, java.class.version=55.0}
[DEBUG] 2024-05-07 20-16-08.368 [http-nio-8080-exec-5] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2024-05-07 20-16-08.368 [http-nio-8080-exec-5] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2024-05-07 20-16-08.369 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2024-05-07 20-16-08.369 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@467aa405] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5c17a858]
[DEBUG] 2024-05-07 20-16-08.416 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [entity.User] is safe
[DEBUG] 2024-05-07 20-16-08.416 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.User
[DEBUG] 2024-05-07 20-16-08.439 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [entity.User] is safe
[DEBUG] 2024-05-07 20-16-08.439 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.User
[DEBUG] 2024-05-07 20-16-08.647 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [entity.Attendance] is safe
[DEBUG] 2024-05-07 20-16-08.648 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Attendance
[DEBUG] 2024-05-07 20-16-08.648 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [entity.Attendance] is safe
[DEBUG] 2024-05-07 20-16-08.648 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Attendance
[DEBUG] 2024-05-07 20-16-08.665 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: entity.User.attendance
[DEBUG] 2024-05-07 20-16-08.665 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update attendance set user_id=? where attendance_id=?
[DEBUG] 2024-05-07 20-16-08.665 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update attendance set  where attendance_id=?
[DEBUG] 2024-05-07 20-16-08.665 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update attendance set user_id=null where user_id=? and attendance_id=?
[DEBUG] 2024-05-07 20-16-08.665 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update attendance set user_id=null where user_id=?
[DEBUG] 2024-05-07 20-16-08.668 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: entity.User
[DEBUG] 2024-05-07 20-16-08.668 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select user_id from users where user_id =?
[DEBUG] 2024-05-07 20-16-08.668 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.password_hash as password2_1_, user_.username as username3_1_ from users user_ where user_.user_id=?
[DEBUG] 2024-05-07 20-16-08.668 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into users (password_hash, username, user_id) values (?, ?, ?)
[DEBUG] 2024-05-07 20-16-08.668 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update users set password_hash=?, username=? where user_id=?
[DEBUG] 2024-05-07 20-16-08.668 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from users where user_id=?
[DEBUG] 2024-05-07 20-16-08.668 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into users (password_hash, username) values (?, ?)
[DEBUG] 2024-05-07 20-16-08.696 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@327d5da3]
[DEBUG] 2024-05-07 20-16-08.697 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : attendance
[DEBUG] 2024-05-07 20-16-08.702 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@415b15ef]
[DEBUG] 2024-05-07 20-16-08.705 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37914eb9]
[DEBUG] 2024-05-07 20-16-08.706 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : attendance.clockInTime
[DEBUG] 2024-05-07 20-16-08.706 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : attendance.clockOutTime
[DEBUG] 2024-05-07 20-16-08.706 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : attendance.clockedStatus
[DEBUG] 2024-05-07 20-16-08.706 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : attendance.date
[DEBUG] 2024-05-07 20-16-08.706 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : attendance.user
[DEBUG] 2024-05-07 20-16-08.707 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : attendance.user
[DEBUG] 2024-05-07 20-16-08.707 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : passwordHash
[DEBUG] 2024-05-07 20-16-08.707 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2024-05-07 20-16-08.707 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2024-05-07 20-16-08.721 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2024-05-07 20-16-08.727 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=entity.User)
    - Returns
       - EntityReturnImpl(entity=entity.User, querySpaceUid=<gen:0>, path=entity.User)
          - CollectionAttributeFetchImpl(collection=entity.User.attendance, querySpaceUid=<gen:1>, path=entity.User.attendance)
             - (collection element) CollectionFetchableElementEntityGraph(entity=entity.Attendance, querySpaceUid=<gen:2>, path=entity.User.attendance.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(attendance)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=entity.User.attendance)
                - SQL table alias mapping - attendance1_
                - alias suffix - 1_
                - suffixed key columns - {user_id6_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - attendan1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Attendance)
                      - SQL table alias mapping - attendance1_
                      - alias suffix - 2_
                      - suffixed key columns - {attendan1_0_2_}

[DEBUG] 2024-05-07 20-16-08.730 [http-nio-8080-exec-5] EntityLoader - Static select for entity entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.password_hash as password2_1_0_, user0_.username as username3_1_0_, attendance1_.user_id as user_id6_0_1_, attendance1_.attendance_id as attendan1_0_1_, attendance1_.attendance_id as attendan1_0_2_, attendance1_.clock_in_time as clock_in2_0_2_, attendance1_.clock_out_time as clock_ou3_0_2_, attendance1_.status as status4_0_2_, attendance1_.date as date5_0_2_, attendance1_.user_id as user_id6_0_2_ from users user0_ left outer join attendance attendance1_ on user0_.user_id=attendance1_.user_id where user0_.user_id=?
[DEBUG] 2024-05-07 20-16-08.730 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30368bae]
[DEBUG] 2024-05-07 20-16-08.730 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : attendance
[DEBUG] 2024-05-07 20-16-08.730 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a7d4d1d]
[DEBUG] 2024-05-07 20-16-08.730 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f0ab4d4]
[DEBUG] 2024-05-07 20-16-08.730 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : attendance.clockInTime
[DEBUG] 2024-05-07 20-16-08.730 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : attendance.clockOutTime
[DEBUG] 2024-05-07 20-16-08.730 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : attendance.clockedStatus
[DEBUG] 2024-05-07 20-16-08.730 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : attendance.date
[DEBUG] 2024-05-07 20-16-08.730 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : attendance.user
[DEBUG] 2024-05-07 20-16-08.730 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : attendance.user
[DEBUG] 2024-05-07 20-16-08.730 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : passwordHash
[DEBUG] 2024-05-07 20-16-08.730 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2024-05-07 20-16-08.730 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2024-05-07 20-16-08.730 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2024-05-07 20-16-08.731 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=entity.User)
    - Returns
       - EntityReturnImpl(entity=entity.User, querySpaceUid=<gen:0>, path=entity.User)
          - CollectionAttributeFetchImpl(collection=entity.User.attendance, querySpaceUid=<gen:1>, path=entity.User.attendance)
             - (collection element) CollectionFetchableElementEntityGraph(entity=entity.Attendance, querySpaceUid=<gen:2>, path=entity.User.attendance.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(attendance)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=entity.User.attendance)
                - SQL table alias mapping - attendance1_
                - alias suffix - 1_
                - suffixed key columns - {user_id6_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - attendan1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Attendance)
                      - SQL table alias mapping - attendance1_
                      - alias suffix - 2_
                      - suffixed key columns - {attendan1_0_2_}

[DEBUG] 2024-05-07 20-16-08.731 [http-nio-8080-exec-5] EntityLoader - Static select for entity entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.password_hash as password2_1_0_, user0_.username as username3_1_0_, attendance1_.user_id as user_id6_0_1_, attendance1_.attendance_id as attendan1_0_1_, attendance1_.attendance_id as attendan1_0_2_, attendance1_.clock_in_time as clock_in2_0_2_, attendance1_.clock_out_time as clock_ou3_0_2_, attendance1_.status as status4_0_2_, attendance1_.date as date5_0_2_, attendance1_.user_id as user_id6_0_2_ from users user0_ left outer join attendance attendance1_ on user0_.user_id=attendance1_.user_id where user0_.user_id=?
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity entity.User: select user0_.user_id as user_id1_1_1_, user0_.password_hash as password2_1_1_, user0_.username as username3_1_1_, attendance1_.user_id as user_id6_0_3_, attendance1_.attendance_id as attendan1_0_3_, attendance1_.attendance_id as attendan1_0_0_, attendance1_.clock_in_time as clock_in2_0_0_, attendance1_.clock_out_time as clock_ou3_0_0_, attendance1_.status as status4_0_0_, attendance1_.date as date5_0_0_, attendance1_.user_id as user_id6_0_0_ from users user0_ left outer join attendance attendance1_ on user0_.user_id=attendance1_.user_id where user0_.user_id=?
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity entity.User: select user0_.user_id as user_id1_1_1_, user0_.password_hash as password2_1_1_, user0_.username as username3_1_1_, attendance1_.user_id as user_id6_0_3_, attendance1_.attendance_id as attendan1_0_3_, attendance1_.attendance_id as attendan1_0_0_, attendance1_.clock_in_time as clock_in2_0_0_, attendance1_.clock_out_time as clock_ou3_0_0_, attendance1_.status as status4_0_0_, attendance1_.date as date5_0_0_, attendance1_.user_id as user_id6_0_0_ from users user0_ left outer join attendance attendance1_ on user0_.user_id=attendance1_.user_id where user0_.user_id=?
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: entity.Attendance
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select attendance_id from attendance where attendance_id =?
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select attendance_.attendance_id, attendance_.clock_in_time as clock_in2_0_, attendance_.clock_out_time as clock_ou3_0_, attendance_.status as status4_0_, attendance_.date as date5_0_, attendance_.user_id as user_id6_0_ from attendance attendance_ where attendance_.attendance_id=?
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into attendance (clock_in_time, clock_out_time, status, date, user_id, attendance_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update attendance set clock_in_time=?, clock_out_time=?, status=?, date=?, user_id=? where attendance_id=?
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from attendance where attendance_id=?
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into attendance (clock_in_time, clock_out_time, status, date, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@559f796a]
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : clockInTime
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : clockOutTime
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : clockedStatus
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2024-05-07 20-16-08.744 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bc78307]
[DEBUG] 2024-05-07 20-16-08.745 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.attendance
[DEBUG] 2024-05-07 20-16-08.745 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.attendance
[DEBUG] 2024-05-07 20-16-08.745 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.passwordHash
[DEBUG] 2024-05-07 20-16-08.745 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2024-05-07 20-16-08.745 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2024-05-07 20-16-08.745 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=entity.Attendance)
    - Returns
       - EntityReturnImpl(entity=entity.Attendance, querySpaceUid=<gen:0>, path=entity.Attendance)
          - EntityAttributeFetchImpl(entity=entity.User, querySpaceUid=<gen:1>, path=entity.Attendance.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Attendance)
          - SQL table alias mapping - attendance0_
          - alias suffix - 0_
          - suffixed key columns - {attendan1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}

[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] EntityLoader - Static select for entity entity.Attendance [NONE]: select attendance0_.attendance_id as attendan1_0_0_, attendance0_.clock_in_time as clock_in2_0_0_, attendance0_.clock_out_time as clock_ou3_0_0_, attendance0_.status as status4_0_0_, attendance0_.date as date5_0_0_, attendance0_.user_id as user_id6_0_0_, user1_.user_id as user_id1_1_1_, user1_.password_hash as password2_1_1_, user1_.username as username3_1_1_ from attendance attendance0_ left outer join users user1_ on attendance0_.user_id=user1_.user_id where attendance0_.attendance_id=?
[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60b35145]
[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : clockInTime
[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : clockOutTime
[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : clockedStatus
[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3400972c]
[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.attendance
[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.attendance
[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.passwordHash
[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=entity.Attendance)
    - Returns
       - EntityReturnImpl(entity=entity.Attendance, querySpaceUid=<gen:0>, path=entity.Attendance)
          - EntityAttributeFetchImpl(entity=entity.User, querySpaceUid=<gen:1>, path=entity.Attendance.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Attendance)
          - SQL table alias mapping - attendance0_
          - alias suffix - 0_
          - suffixed key columns - {attendan1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}

[DEBUG] 2024-05-07 20-16-08.746 [http-nio-8080-exec-5] EntityLoader - Static select for entity entity.Attendance [READ]: select attendance0_.attendance_id as attendan1_0_0_, attendance0_.clock_in_time as clock_in2_0_0_, attendance0_.clock_out_time as clock_ou3_0_0_, attendance0_.status as status4_0_0_, attendance0_.date as date5_0_0_, attendance0_.user_id as user_id6_0_0_, user1_.user_id as user_id1_1_1_, user1_.password_hash as password2_1_1_, user1_.username as username3_1_1_ from attendance attendance0_ left outer join users user1_ on attendance0_.user_id=user1_.user_id where attendance0_.attendance_id=?
[DEBUG] 2024-05-07 20-16-08.747 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity entity.Attendance: select attendance0_.attendance_id as attendan1_0_0_, attendance0_.clock_in_time as clock_in2_0_0_, attendance0_.clock_out_time as clock_ou3_0_0_, attendance0_.status as status4_0_0_, attendance0_.date as date5_0_0_, attendance0_.user_id as user_id6_0_0_ from attendance attendance0_ where attendance0_.attendance_id=?
[DEBUG] 2024-05-07 20-16-08.747 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity entity.Attendance: select attendance0_.attendance_id as attendan1_0_0_, attendance0_.clock_in_time as clock_in2_0_0_, attendance0_.clock_out_time as clock_ou3_0_0_, attendance0_.status as status4_0_0_, attendance0_.date as date5_0_0_, attendance0_.user_id as user_id6_0_0_ from attendance attendance0_ where attendance0_.attendance_id=?
[DEBUG] 2024-05-07 20-16-08.752 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@180eb715]
[DEBUG] 2024-05-07 20-16-08.752 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d89a990]
[DEBUG] 2024-05-07 20-16-08.752 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : clockInTime
[DEBUG] 2024-05-07 20-16-08.752 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : clockOutTime
[DEBUG] 2024-05-07 20-16-08.752 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : clockedStatus
[DEBUG] 2024-05-07 20-16-08.752 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2024-05-07 20-16-08.752 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2024-05-07 20-16-08.752 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2024-05-07 20-16-08.752 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2024-05-07 20-16-08.754 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2024-05-07 20-16-08.754 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=entity.User.attendance)
    - Returns
       - CollectionReturnImpl(collection=entity.User.attendance, querySpaceUid=<gen:0>, path=[entity.User.attendance])
          - (collection element) CollectionFetchableElementEntityGraph(entity=entity.Attendance, querySpaceUid=<gen:1>, path=[entity.User.attendance].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=entity.User.attendance)
          - SQL table alias mapping - attendance0_
          - alias suffix - 0_
          - suffixed key columns - {user_id6_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - attendan1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Attendance)
                - SQL table alias mapping - attendance0_
                - alias suffix - 1_
                - suffixed key columns - {attendan1_0_1_}

[DEBUG] 2024-05-07 20-16-08.755 [http-nio-8080-exec-5] CollectionLoader - Static select for collection entity.User.attendance: select attendance0_.user_id as user_id6_0_0_, attendance0_.attendance_id as attendan1_0_0_, attendance0_.attendance_id as attendan1_0_1_, attendance0_.clock_in_time as clock_in2_0_1_, attendance0_.clock_out_time as clock_ou3_0_1_, attendance0_.status as status4_0_1_, attendance0_.date as date5_0_1_, attendance0_.user_id as user_id6_0_1_ from attendance attendance0_ where attendance0_.user_id=?
[INFO ] 2024-05-07 20-16-08.862 [http-nio-8080-exec-5] access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@47e83064] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 2024-05-07 20-16-09.102 [http-nio-8080-exec-5] Table - No alter strings for table : attendance
[DEBUG] 2024-05-07 20-16-09.102 [http-nio-8080-exec-5] Table - No alter strings for table : users
[DEBUG] 2024-05-07 20-16-09.331 [http-nio-8080-exec-5] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-05-07 20-16-09.334 [http-nio-8080-exec-5] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-05-07 20-16-09.347 [http-nio-8080-exec-5] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-05-07 20-16-09.347 [http-nio-8080-exec-5] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2024-05-07 20-16-09.349 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2024-05-07 20-16-09.349 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2024-05-07 20-16-09.351 [http-nio-8080-exec-5] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1a26afc7
[DEBUG] 2024-05-07 20-16-09.352 [http-nio-8080-exec-5] SessionFactoryRegistry - Registering SessionFactory: 99a619fd-4f75-4cc8-8fe0-fae32f2ee593 (<unnamed>)
[DEBUG] 2024-05-07 20-16-09.352 [http-nio-8080-exec-5] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-05-07 20-16-09.422 [http-nio-8080-exec-5] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-05-07 20-16-09.454 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
[DEBUG] 2024-05-07 20-16-09.468 [http-nio-8080-exec-5] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@748f1cd3
[DEBUG] 2024-05-07 20-16-09.490 [http-nio-8080-exec-5] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.User as generatedAlias0 where generatedAlias0.username=:param0
[DEBUG] 2024-05-07 20-16-09.494 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2024-05-07 20-16-09.500 [http-nio-8080-exec-5] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2024-05-07 20-16-09.517 [http-nio-8080-exec-5] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2024-05-07 20-16-09.528 [http-nio-8080-exec-5] FromElement - FromClause{level=1} : entity.User (generatedAlias0) -> user0_
[DEBUG] 2024-05-07 20-16-09.528 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2024-05-07 20-16-09.530 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2024-05-07 20-16-09.531 [http-nio-8080-exec-5] DotNode - getDataType() : username -> org.hibernate.type.StringType@11e174d9
[DEBUG] 2024-05-07 20-16-09.532 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0.username -> user0_.username
[DEBUG] 2024-05-07 20-16-09.534 [http-nio-8080-exec-5] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2024-05-07 20-16-09.534 [http-nio-8080-exec-5] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
[DEBUG] 2024-05-07 20-16-09.542 [http-nio-8080-exec-5] JoinProcessor - Using FROM fragment [users user0_]
[DEBUG] 2024-05-07 20-16-09.542 [http-nio-8080-exec-5] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2024-05-07 20-16-09.543 [http-nio-8080-exec-5] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.password_hash as password2_1_, user0_.username as username3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=generatedAlias0.username,tableAlias=user0_,className=entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@11e174d9}

[DEBUG] 2024-05-07 20-16-09.543 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2024-05-07 20-16-09.547 [http-nio-8080-exec-5] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.User as generatedAlias0 where generatedAlias0.username=:param0
[DEBUG] 2024-05-07 20-16-09.547 [http-nio-8080-exec-5] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.password_hash as password2_1_, user0_.username as username3_1_ from users user0_ where user0_.username=?
[DEBUG] 2024-05-07 20-16-09.547 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2024-05-07 20-16-09.562 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_, user0_.password_hash as password2_1_, user0_.username as username3_1_ from users user0_ where user0_.username=?
[DEBUG] 2024-05-07 20-16-09.685 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2024-05-07 20-16-09.692 [http-nio-8080-exec-5] Loader - Result row: EntityKey[entity.User#1]
[DEBUG] 2024-05-07 20-16-09.706 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.User#1]
[DEBUG] 2024-05-07 20-16-09.708 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `attendance` : value = NOT NULL COLLECTION
[DEBUG] 2024-05-07 20-16-09.708 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`attendance`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.717 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `passwordHash` : value = 5151321nbmbbhj
[DEBUG] 2024-05-07 20-16-09.717 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`passwordHash`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.717 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = Kevg1
[DEBUG] 2024-05-07 20-16-09.717 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.717 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.User#1]
[DEBUG] 2024-05-07 20-16-09.719 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-09.719 [http-nio-8080-exec-5] SQL - select attendance0_.user_id as user_id6_0_0_, attendance0_.attendance_id as attendan1_0_0_, attendance0_.attendance_id as attendan1_0_1_, attendance0_.clock_in_time as clock_in2_0_1_, attendance0_.clock_out_time as clock_ou3_0_1_, attendance0_.status as status4_0_1_, attendance0_.date as date5_0_1_, attendance0_.user_id as user_id6_0_1_ from attendance attendance0_ where attendance0_.user_id=?
[DEBUG] 2024-05-07 20-16-09.774 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-09.782 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2024-05-07 20-16-09.785 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-09.788 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2024-05-07 20-16-09.788 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-09.788 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2024-05-07 20-16-09.788 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-09.788 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2024-05-07 20-16-09.788 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.Attendance#1]
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockInTime` : value = 2024-02-17T03:00
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockInTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockOutTime` : value = 2024-02-17T11:00
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockOutTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockedStatus` : value = false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockedStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `date` : value = 2024-02-16
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.Attendance#1]
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.Attendance#11]
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockInTime` : value = 2024-05-01T20:49:56
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockInTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockOutTime` : value = null
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockOutTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockedStatus` : value = true
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockedStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `date` : value = null
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.Attendance#11]
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.Attendance#17]
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockInTime` : value = null
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockInTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockOutTime` : value = 2024-05-02T21:12:27
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockOutTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockedStatus` : value = false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockedStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `date` : value = null
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.Attendance#17]
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.Attendance#18]
[DEBUG] 2024-05-07 20-16-09.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockInTime` : value = null
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockInTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockOutTime` : value = 2024-05-02T21:13:27
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockOutTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockedStatus` : value = false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockedStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `date` : value = null
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.Attendance#18]
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.Attendance#19]
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockInTime` : value = 2024-05-03T06:21:10
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockInTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockOutTime` : value = null
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockOutTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockedStatus` : value = true
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockedStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `date` : value = null
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.Attendance#19]
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.Attendance#20]
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockInTime` : value = null
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockInTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockOutTime` : value = 2024-05-03T06:48:50
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockOutTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockedStatus` : value = false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockedStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `date` : value = null
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.Attendance#20]
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.Attendance#21]
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockInTime` : value = 2024-05-03T06:49:31
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockInTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockOutTime` : value = 2024-05-07T19:44
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockOutTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockedStatus` : value = false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockedStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `date` : value = null
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.Attendance#21]
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: entity.User.attendance
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: entity.User.attendance
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-05-07 20-16-09.790 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2024-05-07 20-16-09.796 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-05-07 20-16-09.854 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Attendance as generatedAlias0 where generatedAlias0.id=(select max(generatedAlias1.id) from Attendance as generatedAlias1 where generatedAlias1.user=:param0) order by generatedAlias0.id desc
[DEBUG] 2024-05-07 20-16-09.854 [http-nio-8080-exec-5] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Attendance as generatedAlias0 where generatedAlias0.id=(select max(generatedAlias1.id) from entity.Attendance as generatedAlias1 where generatedAlias1.user=:param0) order by generatedAlias0.id desc
[DEBUG] 2024-05-07 20-16-09.855 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2024-05-07 20-16-09.856 [http-nio-8080-exec-5] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Attendance'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'id'
    |     \-[QUERY] Node: 'query'
    |        +-[SELECT_FROM] Node: 'SELECT_FROM'
    |        |  +-[FROM] Node: 'from'
    |        |  |  \-[RANGE] Node: 'RANGE'
    |        |  |     +-[DOT] Node: '.'
    |        |  |     |  +-[IDENT] Node: 'entity'
    |        |  |     |  \-[IDENT] Node: 'Attendance'
    |        |  |     \-[ALIAS] Node: 'generatedAlias1'
    |        |  \-[SELECT] Node: 'select'
    |        |     \-[AGGREGATE] Node: 'max'
    |        |        \-[DOT] Node: '.'
    |        |           +-[IDENT] Node: 'generatedAlias1'
    |        |           \-[IDENT] Node: 'id'
    |        \-[WHERE] Node: 'where'
    |           \-[EQ] Node: '='
    |              +-[DOT] Node: '.'
    |              |  +-[IDENT] Node: 'generatedAlias1'
    |              |  \-[IDENT] Node: 'user'
    |              \-[COLON] Node: ':'
    |                 \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'id'
       \-[DESCENDING] Node: 'desc'

[DEBUG] 2024-05-07 20-16-09.856 [http-nio-8080-exec-5] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2024-05-07 20-16-09.856 [http-nio-8080-exec-5] FromElement - FromClause{level=1} : entity.Attendance (generatedAlias0) -> attendance0_
[DEBUG] 2024-05-07 20-16-09.856 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> attendance0_.attendance_id
[DEBUG] 2024-05-07 20-16-09.856 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> attendance0_.attendance_id
[DEBUG] 2024-05-07 20-16-09.856 [http-nio-8080-exec-5] DotNode - getDataType() : id -> org.hibernate.type.IntegerType@5754e662
[DEBUG] 2024-05-07 20-16-09.856 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0.id -> attendance0_.attendance_id
[DEBUG] 2024-05-07 20-16-09.856 [http-nio-8080-exec-5] HqlSqlBaseWalker - select << begin [level=2, statement=select]
[DEBUG] 2024-05-07 20-16-09.857 [http-nio-8080-exec-5] FromElement - FromClause{level=2} : entity.Attendance (generatedAlias1) -> attendance1_
[DEBUG] 2024-05-07 20-16-09.858 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias1 -> attendance1_.attendance_id
[DEBUG] 2024-05-07 20-16-09.858 [http-nio-8080-exec-5] DotNode - getDataType() : id -> org.hibernate.type.IntegerType@5754e662
[DEBUG] 2024-05-07 20-16-09.858 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias1.id -> attendance1_.attendance_id
[DEBUG] 2024-05-07 20-16-09.859 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias1 -> attendance1_.attendance_id
[DEBUG] 2024-05-07 20-16-09.859 [http-nio-8080-exec-5] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(entity.User)
[DEBUG] 2024-05-07 20-16-09.859 [http-nio-8080-exec-5] DotNode - dereferenceShortcut() : property user in entity.Attendance does not require a join.
[DEBUG] 2024-05-07 20-16-09.859 [http-nio-8080-exec-5] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2024-05-07 20-16-09.859 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias1.user -> attendance1_.user_id
[DEBUG] 2024-05-07 20-16-09.859 [http-nio-8080-exec-5] HqlSqlBaseWalker - select : finishing up [level=2, statement=select]
[DEBUG] 2024-05-07 20-16-09.859 [http-nio-8080-exec-5] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( max ( attendance1_.attendance_id attendance1_.attendance_id id ) ) ) ( FromClause{level=2} attendance attendance1_ ) ( where ( = ( attendance1_.user_id attendance1_.attendance_id user ) ? ) ) )
[DEBUG] 2024-05-07 20-16-09.859 [http-nio-8080-exec-5] JoinProcessor - Using FROM fragment [attendance attendance1_]
[DEBUG] 2024-05-07 20-16-09.859 [http-nio-8080-exec-5] HqlSqlBaseWalker - select >> end [level=2, statement=select]
[DEBUG] 2024-05-07 20-16-09.859 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> attendance0_.attendance_id
[DEBUG] 2024-05-07 20-16-09.859 [http-nio-8080-exec-5] DotNode - getDataType() : id -> org.hibernate.type.IntegerType@5754e662
[DEBUG] 2024-05-07 20-16-09.859 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0.id -> attendance0_.attendance_id
[DEBUG] 2024-05-07 20-16-09.859 [http-nio-8080-exec-5] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2024-05-07 20-16-09.860 [http-nio-8080-exec-5] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} attendance0_.attendance_id ) ( FromClause{level=1} attendance attendance0_ ) ( where ( = ( attendance0_.attendance_id attendance0_.attendance_id id ) ( SELECT ( {select clause} ( max ( attendance1_.attendance_id attendance1_.attendance_id id ) ) ) ( FromClause{level=2} attendance attendance1_ ) ( where ( = ( attendance1_.user_id attendance1_.attendance_id user ) ? ) ) ) ) ) ( order ( attendance0_.attendance_id attendance0_.attendance_id id ) desc ) )
[DEBUG] 2024-05-07 20-16-09.860 [http-nio-8080-exec-5] JoinProcessor - Using FROM fragment [attendance attendance0_]
[DEBUG] 2024-05-07 20-16-09.860 [http-nio-8080-exec-5] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2024-05-07 20-16-09.860 [http-nio-8080-exec-5] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (attendance)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'attendance0_.attendance_id as attendan1_0_' {alias=generatedAlias0, className=entity.Attendance, tableAlias=attendance0_}
    |  \-[SQL_TOKEN] SqlFragment: 'attendance0_.clock_in_time as clock_in2_0_, attendance0_.clock_out_time as clock_ou3_0_, attendance0_.status as status4_0_, attendance0_.date as date5_0_, attendance0_.user_id as user_id6_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[attendance0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'attendance attendance0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=attendance,tableAlias=attendance0_,origin=null,columns={,className=entity.Attendance}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'attendance0_.attendance_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=attendance0_,className=entity.Attendance,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'attendance0_.attendance_id' {alias=generatedAlias0, className=entity.Attendance, tableAlias=attendance0_}
    |     |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |     \-[SELECT] QueryNode: 'SELECT'  querySpaces (attendance)
    |        +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |        |  \-[AGGREGATE] AggregateNode: 'max'
    |        |     \-[DOT] DotNode: 'attendance1_.attendance_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=attendance1_,className=entity.Attendance,classAlias=generatedAlias1}
    |        |        +-[ALIAS_REF] IdentNode: 'attendance1_.attendance_id' {alias=generatedAlias1, className=entity.Attendance, tableAlias=attendance1_}
    |        |        \-[IDENT] IdentNode: 'id' {originalText=id}
    |        +-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias1], fromElementByTableAlias=[attendance1_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |        |  \-[FROM_FRAGMENT] FromElement: 'attendance attendance1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=attendance,tableAlias=attendance1_,origin=null,columns={,className=entity.Attendance}}
    |        \-[WHERE] SqlNode: 'where'
    |           \-[EQ] BinaryLogicOperatorNode: '='
    |              +-[DOT] DotNode: 'attendance1_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias1.user,tableAlias=attendance1_,className=entity.Attendance,classAlias=generatedAlias1}
    |              |  +-[ALIAS_REF] IdentNode: 'attendance1_.attendance_id' {alias=generatedAlias1, className=entity.Attendance, tableAlias=attendance1_}
    |              |  \-[IDENT] IdentNode: 'user' {originalText=user}
    |              \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(entity.User)}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'attendance0_.attendance_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=attendance0_,className=entity.Attendance,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'attendance0_.attendance_id' {alias=generatedAlias0, className=entity.Attendance, tableAlias=attendance0_}
       |  \-[IDENT] IdentNode: 'id' {originalText=id}
       \-[DESCENDING] SqlNode: 'desc'

[DEBUG] 2024-05-07 20-16-09.860 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2024-05-07 20-16-09.861 [http-nio-8080-exec-5] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Attendance as generatedAlias0 where generatedAlias0.id=(select max(generatedAlias1.id) from entity.Attendance as generatedAlias1 where generatedAlias1.user=:param0) order by generatedAlias0.id desc
[DEBUG] 2024-05-07 20-16-09.861 [http-nio-8080-exec-5] QueryTranslatorImpl - SQL: select attendance0_.attendance_id as attendan1_0_, attendance0_.clock_in_time as clock_in2_0_, attendance0_.clock_out_time as clock_ou3_0_, attendance0_.status as status4_0_, attendance0_.date as date5_0_, attendance0_.user_id as user_id6_0_ from attendance attendance0_ where attendance0_.attendance_id=(select max(attendance1_.attendance_id) from attendance attendance1_ where attendance1_.user_id=?) order by attendance0_.attendance_id desc
[DEBUG] 2024-05-07 20-16-09.861 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2024-05-07 20-16-09.861 [http-nio-8080-exec-5] SQL - select attendance0_.attendance_id as attendan1_0_, attendance0_.clock_in_time as clock_in2_0_, attendance0_.clock_out_time as clock_ou3_0_, attendance0_.status as status4_0_, attendance0_.date as date5_0_, attendance0_.user_id as user_id6_0_ from attendance attendance0_ where attendance0_.attendance_id=(select max(attendance1_.attendance_id) from attendance attendance1_ where attendance1_.user_id=?) order by attendance0_.attendance_id desc limit ?
[DEBUG] 2024-05-07 20-16-09.966 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2024-05-07 20-16-09.966 [http-nio-8080-exec-5] Loader - Result row: EntityKey[entity.Attendance#21]
[DEBUG] 2024-05-07 20-16-09.966 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.Attendance#21]
[DEBUG] 2024-05-07 20-16-09.966 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockInTime` : value = 2024-05-03T06:49:31
[DEBUG] 2024-05-07 20-16-09.966 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockInTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.966 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockOutTime` : value = 2024-05-07T19:44
[DEBUG] 2024-05-07 20-16-09.966 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockOutTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.966 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockedStatus` : value = false
[DEBUG] 2024-05-07 20-16-09.966 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockedStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.966 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `date` : value = null
[DEBUG] 2024-05-07 20-16-09.966 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.966 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2024-05-07 20-16-09.966 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-09.966 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_0_, user0_.password_hash as password2_1_0_, user0_.username as username3_1_0_, attendance1_.user_id as user_id6_0_1_, attendance1_.attendance_id as attendan1_0_1_, attendance1_.attendance_id as attendan1_0_2_, attendance1_.clock_in_time as clock_in2_0_2_, attendance1_.clock_out_time as clock_ou3_0_2_, attendance1_.status as status4_0_2_, attendance1_.date as date5_0_2_, attendance1_.user_id as user_id6_0_2_ from users user0_ left outer join attendance attendance1_ on user0_.user_id=attendance1_.user_id where user0_.user_id=?
[DEBUG] 2024-05-07 20-16-10.014 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2024-05-07 20-16-10.015 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2024-05-07 20-16-10.015 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-10.016 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2024-05-07 20-16-10.016 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2024-05-07 20-16-10.016 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-10.017 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2024-05-07 20-16-10.017 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2024-05-07 20-16-10.017 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-10.017 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2024-05-07 20-16-10.017 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2024-05-07 20-16-10.017 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-10.017 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2024-05-07 20-16-10.018 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2024-05-07 20-16-10.018 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-10.018 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2024-05-07 20-16-10.018 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2024-05-07 20-16-10.018 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-10.018 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2024-05-07 20-16-10.018 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2024-05-07 20-16-10.018 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-10.018 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.User#1]
[DEBUG] 2024-05-07 20-16-10.018 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `attendance` : value = NOT NULL COLLECTION
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`attendance`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `passwordHash` : value = 5151321nbmbbhj
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`passwordHash`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = Kevg1
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.User#1]
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.Attendance#1]
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockInTime` : value = 2024-02-17T03:00
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockInTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockOutTime` : value = 2024-02-17T11:00
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockOutTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockedStatus` : value = false
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockedStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `date` : value = 2024-02-16
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.Attendance#1]
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.Attendance#11]
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockInTime` : value = 2024-05-01T20:49:56
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockInTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockOutTime` : value = null
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockOutTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockedStatus` : value = true
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockedStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `date` : value = null
[DEBUG] 2024-05-07 20-16-10.019 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.Attendance#11]
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.Attendance#17]
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockInTime` : value = null
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockInTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockOutTime` : value = 2024-05-02T21:12:27
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockOutTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockedStatus` : value = false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockedStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `date` : value = null
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.Attendance#17]
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.Attendance#18]
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockInTime` : value = null
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockInTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockOutTime` : value = 2024-05-02T21:13:27
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockOutTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockedStatus` : value = false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockedStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `date` : value = null
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.Attendance#18]
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.Attendance#19]
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockInTime` : value = 2024-05-03T06:21:10
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockInTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockOutTime` : value = null
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockOutTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockedStatus` : value = true
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockedStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `date` : value = null
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.Attendance#19]
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [entity.Attendance#20]
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockInTime` : value = null
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockInTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockOutTime` : value = 2024-05-03T06:48:50
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockOutTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `clockedStatus` : value = false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`clockedStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `date` : value = null
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`date`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.Attendance#20]
[DEBUG] 2024-05-07 20-16-10.020 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: entity.User.attendance
[DEBUG] 2024-05-07 20-16-10.021 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [entity.User.attendance#1]
[DEBUG] 2024-05-07 20-16-10.021 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: entity.User.attendance
[DEBUG] 2024-05-07 20-16-10.021 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-05-07 20-16-10.021 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.User#1
[DEBUG] 2024-05-07 20-16-10.021 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [entity.Attendance#21]
[DEBUG] 2024-05-07 20-16-10.021 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-05-07 20-16-37.790 [Hibernate Connection Pool Validation Thread] DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
